run-name: Deploy to ${{ github.event.inputs.action }} by @${{ github.actor }}
#name: Terraform Deploy
#Edit the workflow from failed pipeline

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Select Terraform Action"
        required: true
        default: plan
        type: choice
        options:
          - validate
          - plan
          - apply
          - destroy

      environment:
        description: "Select Environment"
        required: true
        default: dev
        type: choice
        options:
          - dev
          - qa
          - prod 

jobs:
  terraform:
    runs-on: ubuntu-22.04

    env:
      TF_VAR_github_token: ${{ secrets.GH_PAT }}
      TF_VAR_github_owner: ${{ secrets.GH_OWNER }}
      TFC_TOKEN_app_terraform_io: ${{ secrets.TFC_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh -y

      - name: GitHub CLI Login
        run: echo "${{ secrets.GH_PAT }}" | gh auth login --with-token

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.0

      - name: Setup Terraform Credentials
        run: |
          mkdir -p ~/.terraform.d
          echo "{\"credentials\": {\"app.terraform.io\": {\"token\": \"${{ secrets.TFC_TOKEN }}\"}}}" > ~/.terraform.d/credentials.tfrc.json
      
      - name: Terraform Init
        run: terraform init
        
      # - name: Select Workspace
      #   run: |
      #     terraform workspace select myapp-${{ github.event.inputs.environment }} || terraform workspace new ${{ github.event.inputs.environment }}  
      
      - name: Set Terraform Cloud Workspace
        run: |
          echo "TF_WORKSPACE=myapp-${{ github.event.inputs.environment }}" >> $GITHUB_ENV
      

      - name: Terraform Validate
        if: ${{ github.event.inputs.action == 'validate' }}
        run: terraform validate

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        run: terraform plan -var-file="${{ github.event.inputs.environment }}.tfvars" -state="terraform-${{ github.event.inputs.environment }}.tfstate"

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve -var-file="${{ github.event.inputs.environment }}.tfvars" -state="terraform-${{ github.event.inputs.environment }}.tfstate"

      - name: Display Selected Action
        run: |
          echo "Selected action: ${{ github.event.inputs.action }}"
          echo "Selected Environment: ${{ github.event.inputs.environment }}"
